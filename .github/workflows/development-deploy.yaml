name: Build and deploy qr-service to development server
run-name: ${{ github.actor }} is deploying qr-service to development server ðŸš€
on:
  push:
    branches:
      - development
jobs:
  build-and-publish:
    name: build and publish image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login into ghcr.io
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Publish
        run: |
          echo ${{ secrets.DEV_ENV_FILE }} > .env

          docker compose -f docker-compose.yaml build --no-cache
          docker compose -f docker-compose.yaml push
  deployment:
    needs: build-and-publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: rsync docker compose config
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: docker-compose.yaml
          remote_path: qr-service-2025
          remote_host: ${{ secrets.SSH_DEV_HOST }}
          remote_user: ${{ secrets.SSH_USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: rsync drizzle.config.ts
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: drizzle.config.ts
          remote_path: qr-service-2025
          remote_host: ${{ secrets.SSH_DEV_HOST }}
          remote_user: ${{ secrets.SSH_USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: connect and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_DEV_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker system prune -a --volumes
            docker network create hackcc-network
            cd qr-service-2025

            touch .env
            echo "${{ secrets.DEV_ENV_FILE }}" > .env

            echo "${{ secrets.PAT }}" | docker login ghcr.io --username "${{ github.actor }}" --password-stdin
            docker compose pull
            docker compose up -d
